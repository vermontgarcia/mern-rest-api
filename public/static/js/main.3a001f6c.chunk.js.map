{"version":3,"sources":["Components/Home/Home.js","Components/Common/InputField.js","Components/Common/FromButton.js","Components/Login/Login.js","Components/Signup/Signup.js","Components/Profile/Profile.js","404.js","Router.js","authService.js","App.js","serviceWorker.js","index.js"],"names":["Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","props","react_default","a","createElement","Component","InputField","_ref","handleChange","title","type","name","className","onChange","FormButton","Login","onSubmit","handleLogin","Common_InputField","FromButton","Signup","Profile","NotFound","Router","Switch","Route","exact","path","render","Components_Home_Home","assign","Components_Login_Login","Components_Signup_Signup","Components_Profile_Profile","component","base_url","login","user","history","axios","post","concat","then","res","localStorage","setItem","data","token","JSON","stringify","alert","msg","push","catch","err","response","App","e","preventDefault","target","files","value","setState","handleRedirect","username","email","loggedIn","src_Router","withRouter","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a001f6c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Home extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount (){\r\n\r\n  }\r\n\r\n  render(){\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n\r\n        {/*\r\n        <h1>Home {this.props.state ? this.props.state.user.username : null}</h1>\r\n        <strong>{this.props.state.user.loggedIn ? this.props.state.user.email: \"Usuario no logged\"}</strong>\r\n                <button onClick={this.props.handleLogin}>Login</button>\r\n        */}\r\n\r\n        <h1>Home</h1>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React from 'react';\r\n\r\nconst InputField = ({handleChange, title, type, name}) => (\r\n  <div className='form-field'>\r\n    <label className='label'>\r\n      {title}\r\n      <input className='input'\r\n        type={type}\r\n        name={name}\r\n        onChange={handleChange} />     \r\n    </label>\r\n  </div>\r\n)\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nconst FormButton = ({className, name, type}) => (\r\n  <button className={className} type={type}>{name}</button>\r\n  )\r\n\r\nexport default FormButton;","import React, {Component} from 'react';\r\nimport InputField from '../Common/InputField';\r\nimport FormButton from '../Common/FromButton';\r\n\r\nclass Login extends Component {\r\n  //constructor(){\r\n  //  super();\r\n  //  this.state = {\r\n  //  }\r\n  //}\r\n\r\n  componentWillMount (){\r\n\r\n  }\r\n\r\n  render(){\r\n    //console.log(this.props);\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.props.handleLogin}>\r\n        <InputField title='Email:' type='email' name='email' handleChange={this.props.handleChange} />\r\n        <InputField title='Password:' type='password' name='password' handleChange={this.props.handleChange} />\r\n        <FormButton className='form-button button' type='submit' name='Log in' />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, {Component} from 'react'\r\n\r\nclass Signup extends Component {\r\n  render(){\r\n    return(\r\n      <h1>Signup</h1>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Signup;","import React, {Component} from 'react'\r\n\r\nclass Profile extends Component {\r\n  render(){\r\n    return(\r\n      <h1>Profile</h1>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\n const NotFound = () => (\r\n    <h1>Estas perdido mijo</h1>\r\n);\r\n export default NotFound; ","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Home from './Components/Home/Home'\r\nimport Login from './Components/Login/Login';\r\nimport Signup from './Components/Signup/Signup';\r\nimport Profile from './Components/Profile/Profile';\r\nimport NotFound from './404';\r\n\r\n\r\n\r\nconst Router = ({state, handleLogin, handleChange}) => (\r\n  <Switch>\r\n    <Route exact path='/' render={(props) => (\r\n      <Home \r\n        handleLogin={handleLogin}\r\n        handleChange={handleChange}\r\n        state={state}\r\n        {...props}\r\n        />)}\r\n        />\r\n    <Route exact path='/login' render={(props) => (\r\n      <Login\r\n        handleLogin={handleLogin}\r\n        handleChange={handleChange}\r\n        state={state}\r\n        {...props}\r\n      />)}\r\n    />\r\n    <Route exact path='/signup' render={(props) => (\r\n      <Signup\r\n        //handleLogin={handleLogin}\r\n        handleChange={handleChange}\r\n        state={state}\r\n        {...props}\r\n      />)}\r\n    />\r\n    <Route exact path='/profile' render={(props) => (\r\n      <Profile\r\n        //handleLogin={handleLogin}\r\n        //handleChange={handleChange}\r\n        state={state}\r\n        {...props}\r\n      />)}\r\n    />\r\n    <Route path='*' component={NotFound} />\r\n  </Switch>\r\n)\r\n\r\nexport default Router;","import axios from 'axios';\r\n\r\nconst base_url = 'http://localhost:3500/api';\r\n\r\n\r\nexport const signup = (user, history) => {\r\n  axios.post(`${base_url}/auth/signup`, user)\r\n    .then(res => {\r\n      localStorage.setItem('token', res.data.token);\r\n      localStorage.setItem('user', JSON.stringify(res.data.user));\r\n      alert(res.data.msg);\r\n      console.log(res)\r\n      history.push('/profile')\r\n    })\r\n    .catch((err) => {\r\n      console.log('Error Signup =====> ', err.response);\r\n    })\r\n}\r\n\r\nexport const login = (user, history) => {\r\n  //console.log('User =====>', user)\r\n\r\n  console.log(base_url)\r\n  axios.post(`${base_url}/auth/login`, user)\r\n    .then(res => {\r\n      localStorage.setItem('token', res.data.token);\r\n      localStorage.setItem('user', JSON.stringify(res.data.user));\r\n      alert(res.data.msg);\r\n      //console.log(res.data.user)\r\n      history.push('/profile')\r\n    })\r\n    .catch(err => {\r\n      console.log('Error Login =====> ', err.response);\r\n      alert(err.response.data.msg);\r\n    });\r\n}\r\n\r\n\r\nexport const upload = (user) => {\r\n  let formData = new FormData();\r\n  Object.keys(user).forEach(key => {\r\n    formData.append(key, user[key])\r\n  });\r\n  return axios.patch(`${base_url}/auth/upload`, formData)\r\n}\r\n\r\nexport const isLoggedIn = (user, history) => {\r\n  \r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Router from './Router';\nimport {withRouter} from 'react-router-dom';\nimport {login} from './authService';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      user: {\n        username: '',\n        email: '',\n        loggedIn: false\n      }\n    }\n  }\n\n  handleLogin = (e) => {\n    e.preventDefault();\n    console.log('Logging in.....')\n    console.log(this.state.user);\n    login(this.state.user, this.props.history)\n  }\n\n  handleChange = (e) => {\n    const {user} = this.state;\n    let field = e.target.name;\n    user[field] = e.target.files ? e.target.files[0] : e.target.value;\n    this.setState({user})\n    //console.log(this.state.user);\n  }\n\n  handleRedirect = () => {\n    this.props.history.push('/login');\n  }\n\n  render() {\n    //console.log(\"appjs\", this.props);\n    return (\n      <div className=\"App\">\n        {/*\n        <nav>\n            <button onClick={this.handleRedirect}>{this.state.user.loggedIn ? this.state.user.username: \"login\"}</button>\n        </nav>\n        */}\n        <Router state={this.state} handleLogin={this.handleLogin} handleChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}