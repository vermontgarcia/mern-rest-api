{"version":3,"sources":["authService.js","service.js","Components/Nav/Nav.js","Components/Home/Item.js","Components/Home/Home.js","Components/Login/Login.js","Components/Signup/Signup.js","Components/Profile/ProfileField.js","Components/Profile/Profile.js","404.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["base_url","window","location","hostname","signup","user","history","axios","post","concat","then","res","localStorage","setItem","data","token","JSON","stringify","alert","msg","push","catch","err","response","login","console","log","logout","removeItem","isLoggedIn","getItem","get","headers","x-access-token","searchProduct","search","product","Nav","this","props","react_default","a","createElement","className","icon","type","style","fontSize","NavLink","to","src","alt","name","profilePicture","Component","Meta","Item","_ref","market","image","price","card","hoverable","extra","cover","actions","title","description","Header","Footer","Content","Sider","Search","menu","SubMenu","input","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCollapsed","setState","collapsed","state","handleChange","e","target","value","handleSearch","searching","items","parse","handleSetState","_this2","layout","Components_Nav_Nav","placeholder","onSearch","spin","map","item","index","Home_Item","assign","key","skeleton","active","onClick","handleLogout","FormItem","es_form","LoginForm","handleSubmit","preventDefault","form","validateFields","values","getFieldDecorator","onSubmit","rules","required","message","prefix","color","valuePropName","initialValue","es_checkbox","Link","es_button","htmlType","Login","create","SignupForm","confirmDirty","autoCompleteResult","validateFieldsAndScroll","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","Signup_FormItem","whitespace","validator","Signup","ProfileField","Profile","Profile_ProfileField","email","role","status","NotFound","Router","handleLogin","handleSignup","Switch","Route","exact","path","render","Components_Home_Home","Login_Login","Signup_Signup","Components_Profile_Profile","component","App","files","handleRedirect","src_Router","withRouter","Boolean","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kYAGMA,EAAwC,cAA7BC,OAAOC,SAASC,SAA2B,4BAA8B,4CAG7EC,EAAS,SAACC,EAAMC,GAC3BC,IAAMC,KAAN,GAAAC,OAAcT,EAAd,gBAAsCK,GACnCK,KAAK,SAAAC,GACJC,aAAaC,QAAQ,QAASF,EAAIG,KAAKC,OACvCH,aAAaC,QAAQ,OAAQG,KAAKC,UAAUN,EAAIG,KAAKT,OACrDa,MAAMP,EAAIG,KAAKK,KAEfb,EAAQc,KAAK,OAEdC,MAAM,SAACC,GAENJ,MAAMI,EAAIC,SAAST,KAAKK,QAIjBK,EAAQ,SAACnB,EAAMC,GAC1BmB,QAAQC,IAAI,cAAe1B,GAE3BO,IAAMC,KAAN,GAAAC,OAAcT,EAAd,eAAqCK,GAClCK,KAAK,SAAAC,GACJC,aAAaC,QAAQ,QAASF,EAAIG,KAAKC,OACvCH,aAAaC,QAAQ,OAAQG,KAAKC,UAAUN,EAAIG,KAAKT,OACrDa,MAAMP,EAAIG,KAAKK,KAEfb,EAAQc,KAAK,OAEdC,MAAM,SAAAC,GAELA,EAAIC,SAAST,KAAKK,IAAMD,MAAMI,EAAIC,SAAST,KAAKK,KAAOM,QAAQC,IAAI,iBAI5DC,EAAS,SAACrB,GAGrBM,aAAagB,WAAW,SACxBtB,EAAQc,KAAK,WAYFS,EAAa,SAACvB,GAGzB,IAAMS,EAAQH,aAAakB,QAAQ,SAInCvB,IAAMwB,IAAN,GAAAtB,OAAaT,EAAb,kBAAuC,CACrCgC,QAAS,CACPC,iBAAkBlB,KAGnBL,KAAK,SAAAC,MAKLU,MAAM,SAAAC,GAELJ,MAAMI,EAAIC,SAAST,KAAKK,KAExBP,aAAagB,WAAW,SACxBtB,EAAQc,KAAK,aCtEbpB,EAAwC,cAA7BC,OAAOC,SAASC,SAA2B,4BAA8B,4CAG7E+B,EAAgB,SAACC,GAG5B,OAFAV,QAAQC,IAAI,iBAAkBS,GAC9BV,QAAQC,IAAI,cAAe1B,GACpBO,IAAMwB,IAAN,GAAAtB,OAAaT,EAAb,YAAAS,OAAgC0B,EAAOC,oCCWjCC,mLAlBL,IACChC,EAAQiC,KAAKC,MAAblC,KACP,OACEmC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEC,SAAU,WAEvCP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAG,KAAIT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWO,IAAI,cAAcC,IAAI,WAElEX,EAAAC,EAAAC,cAAA,WACGrC,EAAOmC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAG,YAAWT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBQ,IAAK9C,EAAK+C,KAAMF,IAA6B,WAAxB7C,EAAKgD,eAA8B,cAAgBhD,EAAKgD,kBAA+B,cAZxKC,+BCDXC,WAmBQC,EAjBF,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,OAAQC,EAAVF,EAAUE,MAAOP,EAAjBK,EAAiBL,KAAMQ,EAAvBH,EAAuBG,MAAvB,OAETpB,EAAAC,EAAAC,cAAAmB,EAAA,GACIC,WAAS,EAETC,MAAOL,EACPM,MAAOxB,EAAAC,EAAAC,cAAA,OAAKS,IAAKC,EAAMF,IAAKS,IAC5BM,QAAS,CAACzB,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,YAAcL,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,SAAWL,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,eAEpEL,EAAAC,EAAAC,cAACa,EAAD,CAEAW,MAAON,EACPO,YAAaf,MCFdgB,aAAQC,aAAeC,OAAPC,UAAOD,SAExBE,GADUC,EAAA,EAAKC,QACNC,EAAA,EAAMH,QAsGNI,cAnGb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAxC,KAAAsC,IACXC,EAAAC,OAAAE,EAAA,EAAAF,CAAAxC,KAAAwC,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA5C,QASF6C,gBAAkB,WAChBN,EAAKO,SAAS,CACZC,WAAYR,EAAKS,MAAMD,aAZdR,EAgCbU,aAAe,SAACC,GAAM,IACbrD,EAAU0C,EAAKS,MAAfnD,OAEPA,EAAOC,QAAUoD,EAAEC,OAAOC,MAC1Bb,EAAKO,SAAS,CAACjD,YApCJ0C,EAuCbc,aAAe,SAACD,GAAU,IACnBE,EAAaf,EAAKS,MAAlBM,UACLA,GAAY,EACZf,EAAKO,SAAS,CAACQ,cAHS,IAIjBzD,EAAU0C,EAAKS,MAAfnD,OACPA,EAAOC,QAAUsD,EALO,IAMnBG,EAAShB,EAAKS,MAAdO,MACL3D,EAAcC,GACXzB,KAAK,SAAAC,GACJc,QAAQC,IAAI,qBAAsBf,EAAIG,KAAKK,KAC3C0E,EAAQlF,EAAIG,KAAK+E,MACjBjF,aAAaC,QAAQ,QAASG,KAAKC,UAAU4E,IAC7ChB,EAAKO,SAAS,CAACS,UACfD,GAAY,EACZf,EAAKO,SAAS,CAACQ,cACfnE,QAAQC,IAAI,0BAA2BmD,EAAKS,MAAMO,SAEnDxE,MAAM,SAACC,GAENA,EAAIC,SAAST,KAAKK,IAAMD,MAAMI,EAAIC,SAAST,KAAKK,KAAOM,QAAQC,IAAI,iBAxDvEmD,EAAKS,MAAQ,CACXnD,OAAQ,GACR0D,MAAO,GACPD,WAAW,EACXP,WAAW,GANFR,oFAkBGjE,aAAakB,QAAQ,SAC3BD,EAAWS,KAAKC,MAAMjC,SAAWgC,KAAKC,MAAMjC,QAAQc,KAAK,UAEjE,IAAMyE,EAAQ7E,KAAK8E,MAAMlF,aAAakB,QAAQ,UAC9C+D,EAAQvD,KAAK8C,SAAS,CAACS,UAAUpE,QAAQC,IAAI,kBAE7CY,KAAKC,MAAMwD,kDAyCL,IAAAC,EAAA1D,KAEDsD,EAAatD,KAAKgD,MAAlBM,UACEvF,EAAQiC,KAAKC,MAAM+C,MAAnBjF,KACAwF,EAASvD,KAAKgD,MAAdO,MAEP,OADApE,QAAQC,IAAI,gBAAiBmE,GAE3BrD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAAuD,EAAA,OACEzD,EAAAC,EAAAC,cAAC0B,EAAD,KACE5B,EAAAC,EAAAC,cAACwD,EAAD,CAAK7F,KAAMA,KAEbmC,EAAAC,EAAAC,cAAC4B,EAAD,KACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAC8B,EAAD,CACE2B,YAAY,oBACZC,SAAU,SAAAV,GAAK,OAAIM,EAAKL,aAAaD,OAGxCE,EAAYpD,EAAAC,EAAAC,cAAA2D,EAAA,QAAW,KACxB7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZkD,EAAQA,EAAMS,IAAI,SAACC,EAAMC,GAAP,OAAiBhE,EAAAC,EAAAC,cAAC+D,EAAD3B,OAAA4B,OAAA,CAAMC,IAAKH,GAAWD,MAAY/D,EAAAC,EAAAC,cAAAkE,EAAA,GAAUC,QAAM,KAExFrE,EAAAC,EAAAC,cAAA,KAAGoE,QAASxE,KAAKC,MAAMwE,cAAvB,YAGJvE,EAAAC,EAAAC,cAAC2B,EAAD,wBA7FSf,wECVb0D,EAAWC,EAAA,EAAKzD,KAEhB0D,6MAEJC,aAAe,SAAC3B,GACdA,EAAE4B,iBACFvC,EAAKtC,MAAM8E,KAAKC,eAAe,SAAChG,EAAKiG,GAC9BjG,GACHE,EAAM+F,EAAQ1C,EAAKtC,MAAMjC,oFAKtB,IACAkH,EAAqBlF,KAAKC,MAAM8E,KAAhCG,kBACP,OACEhF,EAAAC,EAAAC,cAAAuE,EAAA,GAAMQ,SAAUnF,KAAK6E,aAAcxE,UAAU,gBAC3CH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBAEFF,EAAAC,EAAAC,cAACsE,EAAD,KACGQ,EAAkB,QAAS,CAC1BE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,6BADpCJ,CAGChF,EAAAC,EAAAC,cAAAiC,EAAA,GACEkD,OAAQrF,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEgF,MAAO,qBAC1C3B,YAAY,yBAGlB3D,EAAAC,EAAAC,cAACsE,EAAD,KACGQ,EAAkB,WAAY,CAC7BE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCADpCJ,CAGChF,EAAAC,EAAAC,cAAAiC,EAAA,GACEkD,OAAQrF,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEgF,MAAO,qBAC1CjF,KAAK,WACLsD,YAAY,oBAGlB3D,EAAAC,EAAAC,cAACsE,EAAD,KACGQ,EAAkB,WAAY,CAC7BO,cAAe,UACfC,cAAc,GAFfR,CAIChF,EAAAC,EAAAC,cAAAuF,EAAA,uBAEFzF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAMvF,UAAU,oBAAoBM,GAAG,WAAvC,mBACAT,EAAAC,EAAAC,cAAAyF,EAAA,GAAQtF,KAAK,UAAUuF,SAAS,SAASzF,UAAU,qBAAnD,UARF,8BAW6BH,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAMjF,GAAG,WAAT,0BAhDbK,aAyDT+E,EAFDpB,EAAA,EAAKqB,QAALrB,CAAcC,GCxDtBF,EAAWC,EAAA,EAAKzD,KAEhB+E,6MAEJjD,MAAQ,CACNkD,cAAc,EACdC,mBAAoB,MAGtBtB,aAAe,SAAC3B,GACdA,EAAE4B,iBACFvC,EAAKtC,MAAM8E,KAAKqB,wBAAwB,SAACpH,EAAKiG,GACvCjG,GACHG,QAAQC,IAAI,4BAA6B6F,QAK/CoB,kBAAoB,SAACnD,GACnB,IAAME,EAAQF,EAAEC,OAAOC,MACvBb,EAAKO,SAAS,CAAEoD,aAAc3D,EAAKS,MAAMkD,gBAAkB9C,OAG7DkD,uBAAyB,SAACC,EAAMnD,EAAOoD,GACrC,IAAMzB,EAAOxC,EAAKtC,MAAM8E,KACpB3B,GAASA,IAAU2B,EAAK0B,cAAc,YACxCD,EAAS,iCAETA,OAIJE,uBAAyB,SAACH,EAAMnD,EAAOoD,GACrC,IAAMzB,EAAOxC,EAAKtC,MAAM8E,KACpB3B,GAASb,EAAKS,MAAMkD,cACtBnB,EAAKC,eAAe,CAAC,WAAY,CAAE2B,OAAO,IAE5CH,6EAIM,IACCtB,EAAqBlF,KAAKC,MAAM8E,KAAhCG,kBACP,OACEhF,EAAAC,EAAAC,cAAAuE,EAAA,GAAMQ,SAAUnF,KAAK6E,cACnB3E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBAGFF,EAAAC,EAAAC,cAACwG,EAAD,KACG1B,EAAkB,WAAY,CAC7BE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8BAA+BuB,YAAY,KAD/E3B,CAGChF,EAAAC,EAAAC,cAAAiC,EAAA,GACEkD,OAAQrF,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEgF,MAAO,qBAC1C3B,YAAY,wBAIlB3D,EAAAC,EAAAC,cAACwG,EAAD,KACG1B,EAAkB,QAAS,CAC1BE,MAAO,CAAC,CACN7E,KAAM,QAAS+E,QAAS,+BACvB,CACDD,UAAU,EAAMC,QAAS,8BAJ5BJ,CAOChF,EAAAC,EAAAC,cAAAiC,EAAA,GACEkD,OAAQrF,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEgF,MAAO,qBAC1C3B,YAAY,yBAIlB3D,EAAAC,EAAAC,cAACwG,EAAD,KACG1B,EAAkB,WAAY,CAC7BE,MAAO,CAAC,CACNC,UAAU,EAAMC,QAAS,+BACzB,CACAwB,UAAW9G,KAAK0G,0BAJnBxB,CAOChF,EAAAC,EAAAC,cAAAiC,EAAA,GACEkD,OAAQrF,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEgF,MAAO,qBAC1CjF,KAAK,WACLsD,YAAY,oBAIlB3D,EAAAC,EAAAC,cAACwG,EAAD,KACG1B,EAAkB,UAAW,CAC5BE,MAAO,CAAC,CACNC,UAAU,EAAMC,QAAS,iCACzB,CACAwB,UAAW9G,KAAKsG,0BAJnBpB,CAOChF,EAAAC,EAAAC,cAAAiC,EAAA,GACEkD,OAAQrF,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,KAAK,OAAOC,MAAO,CAAEgF,MAAO,qBAC1CjF,KAAK,WACLsD,YAAY,uBAIlB3D,EAAAC,EAAAC,cAACwG,EAAD,KACG1B,EAAkB,YAAa,CAC9BO,cAAe,WADhBP,CAGChF,EAAAC,EAAAC,cAAAuF,EAAA,0BAA0BzF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAMjF,GAAG,cAAT,eAE1BT,EAAAC,EAAAC,cAAAyF,EAAA,GAAQtF,KAAK,UAAUuF,SAAS,SAASzF,UAAU,qBAAnD,YANJ,4BAS6BH,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAMjF,GAAG,UAAT,mBA9GZK,aAwHV+F,EAFApC,EAAA,EAAKqB,QAALrB,CAAcsB,GCrHde,EAXM,SAAA7F,GAAA,IAAES,EAAFT,EAAES,MAAOd,EAATK,EAASL,KAAT,OACnBZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACduB,EACD1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QACVS,MCwDMmG,cAxDb,SAAAA,IAAa,IAAA1E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAxC,KAAAiH,IACX1E,EAAAC,OAAAE,EAAA,EAAAF,CAAAxC,KAAAwC,OAAAG,EAAA,EAAAH,CAAAyE,GAAArE,KAAA5C,QACKgD,MAAQ,CACXjF,KAAM,IAHGwE,oFASGjE,aAAakB,QAAQ,SAE3BD,EAAWS,KAAKC,MAAMjC,SAAWgC,KAAKC,MAAMjC,QAAQc,KAAK,UAEjEkB,KAAKC,MAAMwD,kDAiBXtE,QAAQC,IAAIY,KAAKC,OADX,IAEClC,EAAQiC,KAAKC,MAAM+C,MAAnBjF,KAEP,OADAoB,QAAQC,IAAI,OAAOrB,GAEjBmC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwD,EAAD,CAAK7F,KAAMA,IACXmC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBAGFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBO,IAA6B,WAAxB7C,EAAKgD,eAA8B,cAAgBhD,EAAKgD,eAAgBF,IAAK9C,EAAK+C,OACxHZ,EAAAC,EAAAC,cAAC8G,EAAD,CAActF,MAAM,OAAOd,KAAM/C,EAAK+C,OACtCZ,EAAAC,EAAAC,cAAC8G,EAAD,CAActF,MAAM,QAAQd,KAAM/C,EAAKoJ,QACvCjH,EAAAC,EAAAC,cAAC8G,EAAD,CAActF,MAAM,OAAOd,KAAM/C,EAAKqJ,OACtClH,EAAAC,EAAAC,cAAC8G,EAAD,CAActF,MAAM,SAASd,KAAM/C,EAAKsJ,UAG1CnH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGoE,QAASxE,KAAKC,MAAMwE,cAAvB,mBAnDYzD,aCDNsG,EAHE,kBACdpH,EAAAC,EAAAC,cAAA,iCC6CWmH,EArCA,SAAApG,GAAA,IAAE6B,EAAF7B,EAAE6B,MAAOwE,EAATrG,EAASqG,YAAa/C,EAAtBtD,EAAsBsD,aAAcxB,EAApC9B,EAAoC8B,aAAcwE,EAAlDtG,EAAkDsG,aAAchE,EAAhEtC,EAAgEsC,eAAhE,OACbvD,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KACExH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAC7H,GAAD,OAC5BC,EAAAC,EAAAC,cAAC2H,EAADvF,OAAA4B,OAAA,CACEX,eAAgBA,EAChBgB,aAAcA,EACdzB,MAAOA,GACH/C,OAGRC,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAC7H,GAAD,OACjCC,EAAAC,EAAAC,cAAC4H,EAADxF,OAAA4B,OAAA,CACEoD,YAAaA,EACbvE,aAAcA,GACVhD,OAGRC,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,OAAQ,SAAC7H,GAAD,OAClCC,EAAAC,EAAAC,cAAC6H,EAADzF,OAAA4B,OAAA,CACEqD,aAAcA,EACdxE,aAAcA,GACVhD,OAGRC,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAAC7H,GAAD,OACnCC,EAAAC,EAAAC,cAAC8H,EAAD1F,OAAA4B,OAAA,CACEX,eAAgBA,EAChBgB,aAAcA,EACdzB,MAAOA,GACH/C,OAIRC,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAOE,KAAK,IAAIM,UAAWb,eClCzBc,uBAEJ,SAAAA,IAAa,IAAA7F,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAxC,KAAAoI,IACX7F,EAAAC,OAAAE,EAAA,EAAAF,CAAAxC,KAAAwC,OAAAG,EAAA,EAAAH,CAAA4F,GAAAxF,KAAA5C,QAMFwH,YAAc,SAACtE,GACbA,EAAE4B,iBAGF5F,EAAMqD,EAAKS,MAAMjF,KAAMwE,EAAKtC,MAAMjC,UAXvBuE,EAcbkF,aAAe,SAACvE,GACdA,EAAE4B,iBACF3F,QAAQC,IAAI,mBAEZtB,EAAOyE,EAAKS,MAAMjF,KAAMwE,EAAKtC,MAAMjC,UAlBxBuE,EAqBbkC,aAAe,WACbpF,EAAOkD,EAAKtC,MAAMjC,UAtBPuE,EAyBbU,aAAe,SAACC,GAAM,IACbnF,EAAQwE,EAAKS,MAAbjF,KAEPA,EADYmF,EAAEC,OAAOrC,MACPoC,EAAEC,OAAOkF,MAAQnF,EAAEC,OAAOkF,MAAM,GAAKnF,EAAEC,OAAOC,MAC5Db,EAAKO,SAAS,CAAC/E,UA7BJwE,EAgCb+F,eAAiB,WACf/F,EAAKtC,MAAMjC,QAAQc,KAAK,WAjCbyD,EAoCbkB,eAAiB,WACf,IAAM1F,EAAOW,KAAK8E,MAAMlF,aAAakB,QAAQ,SAC7CzB,EAAOwE,EAAKO,SAAS,CAAC/E,SAASwE,EAAKtC,MAAMjC,QAAQc,KAAK,WApCvDyD,EAAKS,MAAQ,CACXjF,KAAM,IAHGwE,oFA0CX,IAAMxE,EAAOW,KAAK8E,MAAMlF,aAAakB,QAAQ,SAC7CzB,EAAOiC,KAAK8C,SAAS,CAAC/E,SAASiC,KAAKC,MAAMjC,QAAQc,KAAK,2CAOvD,OACEoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAObH,EAAAC,EAAAC,cAACmI,EAAD,CACEvF,MAAOhD,KAAKgD,MACZwE,YAAaxH,KAAKwH,YAClB/C,aAAczE,KAAKyE,aACnBgD,aAAczH,KAAKyH,aACnBxE,aAAcjD,KAAKiD,aACnBQ,eAAgBzD,KAAKyD,yBAlEbzC,cAyEHwH,eAAWJ,ICtENK,QACW,cAA7B9K,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS6K,MACvB,yECLNC,IAASb,OAAO5H,EAAAC,EAAAC,cANG,kBACjBF,EAAAC,EAAAC,cAACwI,GAAA,EAAD,KACE1I,EAAAC,EAAAC,cAACyI,GAAD,QAIY,MAAgBC,SAASC,eAAe,SDoHlD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9K,KAAK,SAAA+K,GACjCA,EAAaC","file":"static/js/main.2e110bb4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//const base_url = 'http://localhost:3500/api';\r\nconst base_url = window.location.hostname === 'localhost' ? 'http://localhost:3500/api' : 'https://compare-it-mern.herokuapp.com/api';\r\n\r\n\r\nexport const signup = (user, history) => {\r\n  axios.post(`${base_url}/auth/signup`, user)\r\n    .then(res => {\r\n      localStorage.setItem('token', res.data.token);\r\n      localStorage.setItem('user', JSON.stringify(res.data.user));\r\n      alert(res.data.msg);\r\n      //console.log(res)\r\n      history.push('/')\r\n    })\r\n    .catch((err) => {\r\n      //console.log('Error Signup =====> ', err.response);\r\n      alert(err.response.data.msg);\r\n    })\r\n}\r\n\r\nexport const login = (user, history) => {\r\n  console.log('URL =====> ', base_url);\r\n  //console.log('User =====>', user)\r\n  axios.post(`${base_url}/auth/login`, user)\r\n    .then(res => {\r\n      localStorage.setItem('token', res.data.token);\r\n      localStorage.setItem('user', JSON.stringify(res.data.user));\r\n      alert(res.data.msg);\r\n      //console.log(res.data.user)\r\n      history.push('/')\r\n    })\r\n    .catch(err => {\r\n      //console.log('Error Login =====> ', err.response);\r\n      err.response.data.msg ? alert(err.response.data.msg) : console.log('No message');\r\n    });\r\n}\r\n\r\nexport const logout = (history) => {\r\n  //console.log('Logging out......')\r\n  //localStorage.clear();\r\n  localStorage.removeItem('token');\r\n  history.push('/login');\r\n}\r\n\r\n\r\nexport const upload = (user) => {\r\n  let formData = new FormData();\r\n  Object.keys(user).forEach(key => {\r\n    formData.append(key, user[key])\r\n  });\r\n  return axios.patch(`${base_url}/auth/upload`, formData)\r\n}\r\n\r\nexport const isLoggedIn = (history) => {\r\n  //console.log('Verifying token.....')\r\n\r\n  const token = localStorage.getItem('token');\r\n\r\n  //console.log(user)\r\n\r\n  axios.get(`${base_url}/auth/loggedin`, {\r\n    headers: {\r\n      'x-access-token': token\r\n    }\r\n  })\r\n    .then(res => {\r\n      //console.log('Valid token', res.data);\r\n      //alert(res.data.msg)\r\n      \r\n    })\r\n    .catch(err => {\r\n      //console.log('Invalid token', err.response.data.msg);\r\n      alert(err.response.data.msg)\r\n      //localStorage.clear();\r\n      localStorage.removeItem('token');\r\n      history.push('/login')\r\n    });  \r\n}","import axios from 'axios';\r\n\r\n\r\n//const base_url = 'http://localhost:3500/api';\r\n\r\n\r\nconst base_url = window.location.hostname === 'localhost' ? 'http://localhost:3500/api' : 'https://compare-it-mern.herokuapp.com/api';\r\n\r\n\r\nexport const searchProduct = (search) => {\r\n  console.log('Service =====>', search)\r\n  console.log('URL =====> ', base_url);\r\n  return axios.get(`${base_url}/search/${search.product}`)\r\n    /*\r\n    .then(res => {\r\n      console.log('Search Data =====>', res.data.msg)\r\n      //alert(res.data.msg);\r\n      //console.log(res)\r\n      //history.push('/')\r\n    })\r\n    .catch((err) => {\r\n      //console.log('Error Signup =====> ', err.response);\r\n      err.response.data.msg ? alert(err.response.data.msg) : console.log('No message');\r\n    })\r\n    */\r\n}","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Icon} from 'antd';\r\n\r\nclass Nav extends Component {\r\n  render(){\r\n    const {user} = this.props\r\n    return (\r\n      <nav className='nav'>\r\n        <div>\r\n          <Icon type='menu' style={{ fontSize: '30px'}}/>\r\n        </div>\r\n        <div>\r\n          <NavLink to='/'><img className='nav-logo' src='/search.png' alt='Logo' /></NavLink>\r\n        </div>\r\n        <div>\r\n          {user ? <NavLink to='/profile'><img className='nav-profile-picture' alt={user.name} src={user.profilePicture === 'avatar' ? '/avatar.png' : user.profilePicture} /></NavLink> : null}\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport {Card, Icon, Avatar} from 'antd';\n\nconst {Meta} = Card;\n\nconst Item = ({market, image, name, price}) => (\n\n    <Card\n        hoverable\n        //style={{ width: 200 }}\n        extra={market}\n        cover={<img alt={name} src={image} />}\n        actions={[<Icon type=\"setting\" />, <Icon type=\"edit\" />, <Icon type=\"ellipsis\" />]}\n    >\n        <Meta\n        //avatar={<Avatar src='\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"' />}\n        title={price}\n        description={name}\n        />\n    </Card>\n);\n\nexport default Item;","import React, {Component} from 'react';\r\nimport {isLoggedIn} from '../../authService'\r\nimport {searchProduct} from '../../service'\r\n//import {Link} from 'react-router-dom';\r\nimport InputField from '../Common/InputField';\r\nimport Nav from '../Nav/Nav';\r\nimport Item from './Item';\r\n\r\nimport {Skeleton} from 'antd';\r\nimport {Layout} from 'antd';\r\nimport {Menu, Icon, Button } from 'antd';\r\nimport {Col, Row} from 'antd';\r\nimport {Input} from 'antd';\r\nimport {Spin} from 'antd';\r\n\r\nconst {Header, Footer, Sider, Content} = Layout\r\nconst SubMenu = Menu.SubMenu;\r\nconst Search = Input.Search;\r\n\r\nclass Home extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      search: {},\r\n      items: [],\r\n      searching: false,\r\n      collapsed: false,\r\n    }\r\n  }\r\n\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n    const token = localStorage.getItem('token');\r\n    token ? isLoggedIn(this.props.history) : this.props.history.push('/login');\r\n\r\n    const items = JSON.parse(localStorage.getItem('items'))\r\n    items ? this.setState({items}) : console.log('No items found');  \r\n\r\n    this.props.handleSetState()\r\n\r\n    //let {user} = this.props.state;\r\n    //user = JSON.parse(localStorage.getItem('user'))\r\n    ////user ? this.setState({user}) : this.props.history.push('/login');\r\n    //this.setState({user})\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const {search} = this.state;\r\n    //let {items} = this.state;\r\n    search.product = e.target.value;\r\n    this.setState({search})\r\n  }\r\n  \r\n  handleSearch = (value) => {\r\n    let {searching} = this.state;\r\n    searching = true;\r\n    this.setState({searching})\r\n    const {search} = this.state;\r\n    search.product = value;\r\n    let {items} = this.state;\r\n    searchProduct(search)\r\n      .then(res => {\r\n        console.log('Search Data =====>', res.data.msg)\r\n        items = res.data.items;\r\n        localStorage.setItem('items', JSON.stringify(items));\r\n        this.setState({items})\r\n        searching = false;\r\n        this.setState({searching});\r\n        console.log('Items from state =====>', this.state.items)\r\n      })\r\n      .catch((err) => {\r\n        //console.log('Error Signup =====> ', err.response);\r\n        err.response.data.msg ? alert(err.response.data.msg) : console.log('No message');\r\n      });\r\n    //console.log('Items =====> ', items)\r\n    //this.setState({items})\r\n\r\n  }\r\n\r\n  render(){\r\n    //console.log(this.props);\r\n    let {searching} = this.state;\r\n    const {user} = this.props.state;\r\n    const {items} = this.state;\r\n    console.log('Items initial', items)\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Header>\r\n            <Nav user={user} />\r\n          </Header>\r\n          <Content>\r\n            <div className='home-envelop'>\r\n              <div className='input-search'>\r\n                <Search\r\n                  placeholder='busca un articulo'\r\n                  onSearch={value => this.handleSearch(value)}\r\n                />\r\n              </div>\r\n              {searching ? <Spin /> : null}\r\n              <div className='cards-envelop'>\r\n                {items ? items.map((item, index) => <Item key={index} {...item} />) : <Skeleton active/>}\r\n              </div>\r\n              <p onClick={this.props.handleLogout}>Logout</p>\r\n            </div>\r\n          </Content>\r\n          <Footer>Footer</Footer>\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {login} from '../../authService';\r\n\r\nimport {\r\n  Form, Icon, Input, Button, Checkbox,\r\n} from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass LoginForm extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        login(values, this.props.history)\r\n      }\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"form-envelop\">\r\n        <div>\r\n          <h1>Login</h1>\r\n        </div>\r\n        <FormItem>\r\n          {getFieldDecorator('email', {\r\n            rules: [{ required: true, message: 'Please type your email!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"user@compareit.com\"/>\r\n          )}\r\n        </FormItem>\r\n        <FormItem>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please type your Password!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Your password\"/>\r\n          )}\r\n        </FormItem>\r\n        <FormItem>\r\n          {getFieldDecorator('remember', {\r\n            valuePropName: 'checked',\r\n            initialValue: true,\r\n          })(\r\n            <Checkbox>Remember me</Checkbox>\r\n          )}\r\n          <Link className=\"login-form-forgot\" to='/forgot'>Forgot password</Link>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n          Don't have an account yet? <Link to='/signup'>Register now!</Link>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst Login = Form.create()(LoginForm);\r\n\r\nexport default Login;\r\n","import React, {Component} from 'react'\r\nimport InputField from '../Common/InputField';\r\nimport FormButton from '../Common/FromButton';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nimport {\r\n  Form, Icon, Input, Button, Checkbox,\r\n} from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass SignupForm extends Component {\r\n\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('The password is not the same!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  }\r\n\r\n\r\n  render(){\r\n    const {getFieldDecorator} = this.props.form;\r\n    return(\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <h1>Signup</h1>\r\n        </div>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder='What is your name'/>\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator('email', {\r\n            rules: [{\r\n              type: 'email', message: 'Please enter a valid email!',\r\n            }, {\r\n              required: true, message: 'Please enter your email!',\r\n            }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder='user@compareit.com'/>\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator('password', {\r\n            rules: [{\r\n              required: true, message: 'Please enter your Password!',\r\n            },{\r\n              validator: this.validateToNextPassword,\r\n            }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Your password\"/>\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator('confirm', {\r\n            rules: [{\r\n              required: true, message: 'Please confirm your Password!',\r\n            },{\r\n              validator: this.compareToFirstPassword,\r\n            }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"/>\r\n          )}\r\n        </FormItem>\r\n\r\n        <FormItem>\r\n          {getFieldDecorator('agreement', {\r\n            valuePropName: 'checked',\r\n          })(\r\n            <Checkbox>I have read the <Link to='/agreement'>agreement</Link></Checkbox>\r\n            )}\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n              Register\r\n            </Button>\r\n            Already have an account? <Link to='/login' >Log in</Link>\r\n        </FormItem>\r\n\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst Signup = Form.create()(SignupForm);\r\n\r\nexport default Signup;","import React from 'react';\r\n\r\nconst ProfileField = ({title, name}) => (\r\n  <div className='profile-field-envelop'>\r\n    <label className='label'>\r\n      {title}\r\n      <p className='data'>\r\n        {name}\r\n        </p>     \r\n    </label>\r\n  </div>\r\n)\r\n\r\nexport default ProfileField;","import React, {Component} from 'react';\r\nimport {isLoggedIn} from '../../authService';\r\nimport ProfileField from './ProfileField';\r\nimport Nav from '../Nav/Nav';\r\n\r\nclass Profile extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      user: {}\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    token ? isLoggedIn(this.props.history) : this.props.history.push('/login')\r\n\r\n    this.props.handleSetState()\r\n\r\n\r\n    /*\r\n    if (token){\r\n      isLoggedIn(this.props.history)\r\n      const user = JSON.parse(localStorage.getItem('user'))\r\n      this.setState({user}) \r\n    } else {\r\n      this.props.history.push('/login');\r\n    } \r\n    */\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    console.log(this.props)\r\n    const {user} = this.props.state\r\n    console.log(\"user\",user)\r\n    return(\r\n      <div>\r\n        <Nav user={user}/>\r\n        <div>\r\n          <h1>Profile</h1>\r\n        </div>\r\n\r\n        <div className='profile-data'>\r\n          <img className='profile-picture' src={user.profilePicture === 'avatar' ? '/avatar.png' : user.profilePicture} alt={user.name} />\r\n          <ProfileField title='Name' name={user.name} />\r\n          <ProfileField title='Email' name={user.email} />\r\n          <ProfileField title='Role' name={user.role} />\r\n          <ProfileField title='Status' name={user.status} />\r\n        </div>\r\n\r\n        <div>\r\n          <p onClick={this.props.handleLogout}>Logout</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\n const NotFound = () => (\r\n    <h1>Estas perdido mijo</h1>\r\n);\r\n export default NotFound; ","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Home from './Components/Home/Home'\r\nimport Login from './Components/Login/Login';\r\nimport Signup from './Components/Signup/Signup';\r\nimport Profile from './Components/Profile/Profile';\r\nimport NotFound from './404';\r\n\r\n\r\n\r\nconst Router = ({state, handleLogin, handleLogout, handleChange, handleSignup, handleSetState}) => (\r\n  <Switch>\r\n    <Route exact path='/' render={(props) => (\r\n      <Home\r\n        handleSetState={handleSetState}\r\n        handleLogout={handleLogout}\r\n        state={state}\r\n        {...props}\r\n      />)}\r\n    />\r\n    <Route exact path='/login' render={(props) => (\r\n      <Login\r\n        handleLogin={handleLogin}\r\n        handleChange={handleChange}\r\n        {...props}\r\n      />)}\r\n    />\r\n    <Route exact path='/signup' render={(props) => (\r\n      <Signup\r\n        handleSignup={handleSignup}\r\n        handleChange={handleChange}\r\n        {...props}\r\n      />)}\r\n    />\r\n    <Route exact path='/profile' render={(props) => (\r\n      <Profile\r\n        handleSetState={handleSetState}\r\n        handleLogout={handleLogout}\r\n        state={state}\r\n        {...props}\r\n      />)}\r\n    />\r\n    \r\n    <Route path='*' component={NotFound} />\r\n  </Switch>\r\n)\r\n\r\nexport default Router;","import React, { Component } from 'react';\nimport Router from './Router';\nimport {withRouter} from 'react-router-dom';\nimport {login} from './authService';\nimport {logout} from './authService';\nimport {signup} from './authService';\nimport './App.css';\n//import Nav from './Components/Nav/Nav';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      user: {}\n    }\n  }\n\n  handleLogin = (e) => {\n    e.preventDefault();\n    //console.log('Logging in.....')\n    //console.log(this.state.user);\n    login(this.state.user, this.props.history)\n  }\n  \n  handleSignup = (e) => {\n    e.preventDefault();\n    console.log('Signing up.....')\n    //console.log(this.state.user);\n    signup(this.state.user, this.props.history)\n  }\n\n  handleLogout = () => {\n    logout(this.props.history)\n  }\n\n  handleChange = (e) => {\n    const {user} = this.state;\n    let field = e.target.name;\n    user[field] = e.target.files ? e.target.files[0] : e.target.value;\n    this.setState({user})\n  }\n\n  handleRedirect = () => {\n    this.props.history.push('/login');\n  }\n\n  handleSetState = () => {\n    const user = JSON.parse(localStorage.getItem('user'))\n    user ? this.setState({user}) : this.props.history.push('/login');\n  }\n\n  componentWillMount(){\n    const user = JSON.parse(localStorage.getItem('user'))\n    user ? this.setState({user}) : this.props.history.push('/login');\n    //user != null || user != undefined ? this.setState({user}) : this.props.history.push('/login');\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/*\n        <nav>\n            <button onClick={this.handleRedirect}>{this.state.user.loggedIn ? this.state.user.username: \"login\"}</button>\n        </nav>\n        <Nav />\n        */}\n        <Router \n          state={this.state}\n          handleLogin={this.handleLogin}\n          handleLogout={this.handleLogout}\n          handleSignup={this.handleSignup}\n          handleChange={this.handleChange}\n          handleSetState={this.handleSetState}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}